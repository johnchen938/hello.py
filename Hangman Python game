import random

# 🏆 Score tracking
score = {"wins": 0, "losses": 0}

def hangman():
    print("\n🕵️‍♂️ Welcome to 'Hangman'!")
    
    # Dictionary with word categories and hints
    words = {
        "Programming": [("python", "A popular programming language"),
                        ("debugging", "Fixing errors in code"),
                        ("developer", "Someone who writes software")],
        "Animals": [("elephant", "A large animal with a trunk"),
                    ("giraffe", "The tallest animal on Earth"),
                    ("penguin", "A flightless bird that swims")],
        "Countries": [("canada", "Country known for maple syrup"),
                      ("japan", "Land of the rising sun"),
                      ("brazil", "Home of the Amazon rainforest")]
    }

    # Randomly select a category and word
    category = random.choice(list(words.keys()))
    word, hint = random.choice(words[category])
    guessed = "_" * len(word)
    attempts = 6
    guessed_letters = []

    print(f"\n📌 **Category:** {category}")
    print(f"💡 **Hint:** {hint}")
    print(f"Word: {guessed}  | Attempts left: {attempts}")

    while attempts > 0 and "_" in guessed:
        guess = input("\nGuess a letter: ").lower()

        if len(guess) != 1 or not guess.isalpha():
            print("❌ Please enter a single valid letter!")
            continue

        if guess in guessed_letters:
            print("⚠️ You already guessed that letter!")
        elif guess in word:
            guessed_letters.append(guess)
            guessed = "".join([char if char in guessed_letters else "_" for char in word])
        else:
            guessed_letters.append(guess)
            attempts -= 1
            print(f"❌ Wrong guess! Attempts left: {attempts}")

        print(f"Word: {guessed}  | Attempts left: {attempts}")

    if "_" not in guessed:
        print(f"\n🎉 You won! The word was '{word}'")
        score["wins"] += 1
    else:
        print(f"\n😢 You lost! The word was '{word}'")
        score["losses"] += 1

# Run the game
hangman()
